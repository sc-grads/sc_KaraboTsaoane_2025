name: Database Automation Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment Environment'
        required: true
        default: 'development'
        type: choice
        options:
          - development
          - production

jobs:
  build-db:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'development' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install SQL Server tools
        run: |
          sudo apt-get update
          sudo apt-get install -y curl gnupg apt-transport-https
          curl https://packages.microsoft.com/keys/microsoft.asc | sudo tee /etc/apt/trusted.gpg.d/microsoft.asc
          curl https://packages.microsoft.com/config/ubuntu/22.04/prod.list | sudo tee /etc/apt/sources.list.d/mssql-release.list
          sudo apt-get update
          sudo ACCEPT_EULA=Y apt-get install -y mssql-tools unixodbc-dev
          echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bashrc
          source ~/.bashrc

      - name: Set Database Name
        run: echo "DB_NAME=AutoDBFirstName_${{ github.event.inputs.environment || 'development' }}.db" >> $GITHUB_ENV

      - name: Run SQL script
        env:
          SQL_SERVER: ${{ secrets.SQL_SERVER }}
          SQL_USERNAME: ${{ secrets.SQL_USERNAME }}
          SQL_PASSWORD: ${{ secrets.SQL_PASSWORD }}
          DB_NAME: ${{ env.DB_NAME }}

        run: |
          /opt/mssql-tools/bin/sqlcmd -S $SQL_SERVER -U $SQL_USERNAME -P $SQL_PASSWORD -v DB_NAME="$DB_NAME" -i DatabaseAdministration/SQLStatements/create_db2.sql -o output.txt
          cat output.txt

  approve-production:
    if: github.event.inputs.environment == 'production'
    needs: build-db
    runs-on: ubuntu-latest
    environment:
      name: production
      url: "https://your-production-server-url.com"  # Just for reference, not used in connection

    steps:
      - name: Wait for Manual Approval
        run: echo "Waiting for approval before deploying to production."
      
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install SQL Server tools
        run: |
          sudo apt-get update
          sudo apt-get install -y curl gnupg apt-transport-https
          curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
          curl https://packages.microsoft.com/config/ubuntu/20.04/prod.list | sudo tee /etc/apt/sources.list.d/msprod.list
          sudo apt-get update
          sudo ACCEPT_EULA=Y apt-get install -y mssql-tools unixodbc-dev
          echo "/opt/mssql-tools/bin" >> $GITHUB_PATH

      - name: Run SQL script on production server
        env:
          PROD_SQL_SERVER: ${{ secrets.PROD_SQL_SERVER }}  # Use the actual exposed server address
          PROD_SQL_USER: ${{ secrets.PROD_SQL_USER }}
          PROD_SQL_PASS: ${{ secrets.PROD_SQL_PASS }}
        run: |
          /opt/mssql-tools/bin/sqlcmd -S "$PROD_SQL_SERVER" -U "$PROD_SQL_USER" -P "$PROD_SQL_PASS" -i DatabaseAdministration/SQLStatements/create_db2.sql
